// Test database-based classification system
const chatbotService = require("../services/chatbot.service");
const chatbotTrainingService = require("../services/chatbotTraining.service");

async function testDatabaseSystem() {
  console.log("üß™ Testing Database-Based Smart Classification System...\n");

  try {
    // Test 1: Add some training examples
    console.log("1Ô∏è‚É£ Adding training examples...");

    const trainingExamples = [
      { message: "T√¥i qu√™n m·∫≠t kh·∫©u", agent: "accountAgent", confidence: 1.0 },
      {
        message: "L√†m sao ƒë·ªÉ ƒëƒÉng nh·∫≠p",
        agent: "accountAgent",
        confidence: 0.9,
      },
      { message: "Reset password", agent: "accountAgent", confidence: 0.95 },
      {
        message: "T√¥i mu·ªën vi·∫øt b√†i m·ªõi",
        agent: "postManagementAgent",
        confidence: 1.0,
      },
      {
        message: "L√†m sao ƒë·ªÉ publish b√†i vi·∫øt",
        agent: "postManagementAgent",
        confidence: 0.9,
      },
      {
        message: "Website load ch·∫≠m",
        agent: "performanceAgent",
        confidence: 0.9,
      },
      {
        message: "T·ªëi ∆∞u performance",
        agent: "performanceAgent",
        confidence: 0.95,
      },
    ];

    for (const example of trainingExamples) {
      const result = await chatbotTrainingService.addTrainingExample(
        example.message,
        example.agent,
        example.confidence,
        "manual"
      );
      console.log(`‚úÖ Added: "${example.message}" ‚Üí ${example.agent}`);
    }

    console.log("\n2Ô∏è‚É£ Getting training stats...");
    const stats = await chatbotTrainingService.getTrainingStats();
    console.log("Training Stats:", JSON.stringify(stats, null, 2));

    console.log("\n3Ô∏è‚É£ Testing classification...");

    const testMessages = [
      "T√¥i kh√¥ng th·ªÉ ƒëƒÉng nh·∫≠p ƒë∆∞·ª£c",
      "L√†m sao ƒë·ªÉ t·∫°o b√†i vi·∫øt m·ªõi",
      "Trang web ch·∫≠m qu√°, c·∫ßn t·ªëi ∆∞u",
      "Xin ch√†o, b·∫°n c√≥ th·ªÉ gi√∫p g√¨ cho t√¥i?",
    ];

    for (const message of testMessages) {
      console.log(`\nüìù Testing: "${message}"`);

      try {
        const result = await chatbotService.send(message, "test_session_db", {
          userId: 1,
          autoTrain: true,
        });

        console.log(`‚úÖ Agent: ${result.metadata.agentName}`);
        console.log(`üìä Confidence: ${result.metadata.confidence}`);
        console.log(`üîç Method: ${result.metadata.method}`);
        console.log(`üí≠ Reasoning: ${result.metadata.reasoning}`);
        console.log(`Response: ${result.response.substring(0, 100)}...`);
      } catch (error) {
        console.log(`‚ùå ERROR: ${error.message}`);
      }
    }

    console.log("\n4Ô∏è‚É£ Getting classification logs...");
    const classificationStats =
      await chatbotTrainingService.getClassificationStats(1); // Last 1 day
    console.log(
      "Classification Stats:",
      JSON.stringify(classificationStats, null, 2)
    );

    console.log("\n5Ô∏è‚É£ Getting method performance...");
    const methodPerformance =
      await chatbotTrainingService.getMethodPerformance();
    console.log(
      "Method Performance:",
      JSON.stringify(methodPerformance, null, 2)
    );

    console.log("\n6Ô∏è‚É£ Retraining all intents...");
    const retrainResults = await chatbotTrainingService.retrainAllIntents();
    console.log("Retrain Results:", JSON.stringify(retrainResults, null, 2));

    console.log("\n7Ô∏è‚É£ Export training data...");
    const exportData = await chatbotTrainingService.exportTrainingData();
    console.log(
      `Exported data contains ${exportData.totalSamples} samples from ${Object.keys(exportData.intents).length} intents`
    );

    console.log("\n‚úÖ Database system test completed successfully!");
  } catch (error) {
    console.error("‚ùå Test failed:", error);
  }
}

// Run tests
testDatabaseSystem().catch(console.error);
